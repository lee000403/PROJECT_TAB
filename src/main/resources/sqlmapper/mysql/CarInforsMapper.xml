<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="CarInfors">
    <!-- 검색 -->
	<select id="selectSearch" parameterType="Map" resultType="Map">
        SELECT * 
        FROM db_cars.car_infors
        where 1 = 1 
        <choose>
            <when test="search == 'YEAR'">
            <![CDATA[
            and YEAR > #{words}
            ]]>
            </when>
            <when test="search == 'CAR_NAME'">
            and CAR_NAME like CONCAT(#{words}, '%')
            </when>
        </choose>        
        ;
	</select>

    <!-- mybatis foreach HashMap.put("CAR_INFOR_ID_LIST", CAR_INFOR_ID_LIST)-->
	<select id="selectInUID" parameterType="Map" resultType="Map">    
        SELECT * 
        FROM db_cars.car_infors
        where 1 = 1
        and CAR_INFOR_ID in 
        <foreach item="CAR_INFOR_ID" index="index" collection="CAR_INFOR_ID_LIST"
            open="(" separator="," close=")" nullable="true">
            #{CAR_INFOR_ID}
        </foreach>
        ; 
	</select>

    <!-- 전체 -->
	<select id="selectAll" parameterType="Map" resultType="Map">
        SELECT * 
        FROM db_cars.car_infors
        where 1 = 1 ;
	</select>

    <!-- 상세 -->
	<select id="selectByUID" parameterType="Map" resultType="Map">
        SELECT * 
        FROM db_cars.car_infors
        where CAR_INFOR_ID = #{CAR_INFOR_ID}
	</select>

    <!-- 입력 -->
	<insert id="insert" parameterType="Map">
        insert into car_infors
        (CAR_NAME, YEAR, CAR_INFOR_ID, COMPANY_ID)
        values
        (#{CAR_NAME}, #{YEAR}, #{CAR_INFOR_ID}, #{COMPANY_ID})
        ;
    </insert>

    <!-- 수정 -->
	<update id="update" parameterType="Map">
        update car_infors
        set CAR_NAME = #{CAR_NAME}
        where CAR_INFOR_ID = #{CAR_INFOR_ID}
    </update>

    <!-- 삭제 -->
	<delete id="delete" parameterType="Map">
        delete from car_infors
        where CAR_INFOR_ID = #{CAR_INFOR_ID}
    </delete>

    <select id="common_list" parameterType="Map" resultType="Map">
        select COMMON_CODE_ID, NAME, DESCRIPTION, PARENT_COMMON_CODE_ID 
        from commons_code
        where 1 = 1
        <choose>
            <when test="search == 'COMMON_CODE_ID'">
            and COMMON_CODE_ID like CONCAT(#{words}, '%')
            </when>
            <when test="search == 'NAME'">
            and NAME like CONCAT(#{words}, '%')
            </when>
            <when test="search == 'DESCRIPTION'">
            and DESCRIPTION like CONCAT(#{words}, '%')
            </when>
            <when test="search == 'PARENT_COMMON_CODE_ID'">
            and PARENT_COMMON_CODE_ID like CONCAT(#{words}, '%')
            </when>
        </choose>    
    </select>

    <delete id="delete_com" parameterType="Map">
        delete from commons_code
        where COMMON_CODE_ID = #{COMMON_CODE_ID}
    </delete>

    <update id="update_com" parameterType="Map">
        update commons_code
        set NAME = #{NAME}, SYSTEM_CODE_YN = #{SYSTEM_CODE_YN}, MODIFIER_SEQ = #{MODIFIER_SEQ}, MODIFY_DATE = now()
        where COMMON_CODE_ID = #{COMMON_CODE_ID}
    </update>

    <insert id="insert_com" parameterType="Map">
        insert into commons_code
        (COMMON_CODE_ID,NAME,ORDER_NUMBER,ATTRIBUTION_1,ATTRIBUTION_2,DESCRIPTION,SYSTEM_CODE_YN,USE_YN,PARENT_COMMON_CODE_ID,REGISTER_SEQ,REGISTRY_DATE,MODIFIER_SEQ,MODIFY_DATE)
        values
        (#{COMMON_CODE_ID}, #{NAME}, #{ORDER_NUMBER}, #{ATTRIBUTION_1}, #{ATTRIBUTION_2}, #{DESCRIPTION}, #{SYSTEM_CODE_YN}, #{USE_YN}, #{PARENT_COMMON_CODE_ID}, #{REGISTER_SEQ}, now(), #{MODIFIER_SEQ}, now())
    </insert>

</mapper>
