
CREATE TABLE GENDER
(
  GENDER    VARCHAR(50) NOT NULL COMMENT '성별',
  GENDER_ID VARCHAR(50) NOT NULL COMMENT '성별ID',
  PRIMARY KEY (GENDER_ID)
) COMMENT '성별';

CREATE TABLE LEVEL
(
  LEVEL    INTEGER(50) NOT NULL COMMENT '치매진행단계',
  LEVEL_ID VARCHAR(50) NOT NULL COMMENT '치매진행단계ID',
  PRIMARY KEY (LEVEL_ID)
) COMMENT '치매진행단계';

CREATE TABLE MEMBER_F
(
  PHOTO        VARCHAR(500) NOT NULL COMMENT '회원 사진',
  TYPE_ID      VARCHAR(50)  NOT NULL COMMENT '회원유형ID',
  MEMBERID     VARCHAR(50)  NOT NULL COMMENT '회원아이디',
  PASSWORD     VARCHAR(50)  NOT NULL COMMENT '비밀번호',
  NAME         VARCHAR(50)  NOT NULL COMMENT '이름',
  GENDER_ID    VARCHAR(50)  NOT NULL COMMENT '성별ID',
  BIRTHDATE    INTEGER(50)  NOT NULL COMMENT '생년월일',
  PHONENUMBER  INTEGER(50)  NOT NULL COMMENT '전화번호',
  ADDRESS      VARCHAR(500) NOT NULL COMMENT '주소',
  EMAIL        VARCHAR(50)  NOT NULL COMMENT '이메일',
  INTRODUCTION VARCHAR(500) NOT NULL COMMENT '자기소개'
) COMMENT '가족회원DB';

CREATE TABLE MEMBERID
(
  MEMBERID         VARCHAR(50) NOT NULL COMMENT '회원아이디',
  LEVEL_ID         VARCHAR(50) NOT NULL COMMENT '치매진행단계ID',
  PATIENTGENDER_ID VARCHAR(50) NOT NULL COMMENT '환자성별ID',
  PRIMARY KEY (MEMBERID)
) COMMENT '회원아이디';

CREATE TABLE PATIENTGENDER
(
  PATIENTGENDER    VARCHAR(50) NOT NULL COMMENT '환자성별',
  PATIENTGENDER_ID VARCHAR(50) NOT NULL COMMENT '환자성별ID',
  PRIMARY KEY (PATIENTGENDER_ID)
) COMMENT '환자성별';

CREATE TABLE TYPE
(
  TYPE    VARCHAR(50) NOT NULL COMMENT '회원유형',
  TYPE_ID VARCHAR(50) NOT NULL COMMENT '회원유형ID',
  PRIMARY KEY (TYPE_ID)
) COMMENT '회원유형';

ALTER TABLE MEMBER_F
  ADD CONSTRAINT FK_TYPE_TO_MEMBER_F
    FOREIGN KEY (TYPE_ID)
    REFERENCES TYPE (TYPE_ID);

ALTER TABLE MEMBER_F
  ADD CONSTRAINT FK_GENDER_TO_MEMBER_F
    FOREIGN KEY (GENDER_ID)
    REFERENCES GENDER (GENDER_ID);

ALTER TABLE MEMBER_F
  ADD CONSTRAINT FK_MEMBERID_TO_MEMBER_F
    FOREIGN KEY (MEMBERID)
    REFERENCES MEMBERID (MEMBERID);

ALTER TABLE MEMBERID
  ADD CONSTRAINT FK_LEVEL_TO_MEMBERID
    FOREIGN KEY (LEVEL_ID)
    REFERENCES LEVEL (LEVEL_ID);

ALTER TABLE MEMBERID
  ADD CONSTRAINT FK_PATIENTGENDER_TO_MEMBERID
    FOREIGN KEY (PATIENTGENDER_ID)
    REFERENCES PATIENTGENDER (PATIENTGENDER_ID);
