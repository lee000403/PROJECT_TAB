
CREATE TABLE MEMBERS
(
  PHOTO        VARCHAR(500) NOT NULL COMMENT '회원 사진',
  TYPE_ID      VARCHAR(50)  NOT NULL COMMENT '회원유형ID',
  MEMBERID     VARCHAR(50)  NOT NULL COMMENT '회원아이디',
  PASSWORD     VARCHAR(50)  NOT NULL COMMENT '비밀번호',
  NAME         VARCHAR(50)  NOT NULL COMMENT '이름',
  GENDER_ID    VARCHAR(50)  NOT NULL COMMENT '성별ID',
  BIRTHDATE    INTEGER(50)  NOT NULL COMMENT '생년월일',
  PHONENUMBER  INTEGER(50)  NOT NULL COMMENT '전화번호',
  ADDRESS      VARCHAR(500) NOT NULL COMMENT '주소',
  EMAIL        VARCHAR(50)  NOT NULL COMMENT '이메일',
  INTRODUCTION VARCHAR(500) NOT NULL COMMENT '자기소개',
  PRIMARY KEY (MEMBERID)
) COMMENT '회원DB';

CREATE TABLE PAGE
(
  COMMENT    VARCHAR(500) NOT NULL COMMENT '댓글내용',
  DATE       VARCHAR(50)  NOT NULL COMMENT '작성일자',
  MEMBERID   VARCHAR(50)  NOT NULL COMMENT '사용자ID',
  POST_ID    VARCHAR(50)  NOT NULL COMMENT '게시글ID',
  COMMENT_ID VARCHAR(50)  NOT NULL COMMENT '댓글ID',
  PRIMARY KEY (COMMENT_ID)
) COMMENT '게시글+댓글 페이지';

CREATE TABLE POST
(
  TITLE    VARCHAR(50)  NOT NULL COMMENT '제목',
  DATE     VARCHAR(50)  NOT NULL COMMENT '작성일자',
  CONTENT  VARCHAR(500) NOT NULL COMMENT '내용',
  MEMBERID VARCHAR(50)  NOT NULL COMMENT '사용자ID',
  POST_ID  VARCHAR(50)  NOT NULL COMMENT '게시글ID',
  PRIMARY KEY (POST_ID)
) COMMENT '게시글';

ALTER TABLE PAGE
  ADD CONSTRAINT FK_MEMBERS_TO_PAGE
    FOREIGN KEY (MEMBERID)
    REFERENCES MEMBERS (MEMBERID);

ALTER TABLE PAGE
  ADD CONSTRAINT FK_POST_TO_PAGE
    FOREIGN KEY (POST_ID)
    REFERENCES POST (POST_ID);

ALTER TABLE POST
  ADD CONSTRAINT FK_MEMBERS_TO_POST
    FOREIGN KEY (MEMBERID)
    REFERENCES MEMBERS (MEMBERID);


CREATE TABLE AGE_PREFER
(
  AGE_PREF    VARCHAR(50) NOT NULL COMMENT '파트너 연령',
  AGE_PREF_ID VARCHAR(50) NOT NULL COMMENT '파트너 연령ID',
  PRIMARY KEY (AGE_PREF_ID)
) COMMENT '파트너 연령 선호';

CREATE TABLE CAR_LICENCE_PREFER
(
  CAR_LIC_PREF    VARCHAR(50) NOT NULL COMMENT '차량/면허 여부',
  CAR_LIC_PREF_ID VARCHAR(50) NOT NULL COMMENT '차량/면허 여부 ID',
  PRIMARY KEY (CAR_LIC_PREF_ID)
) COMMENT '차량/면허 여부 필요';

CREATE TABLE CERTIFICATION_PREFER
(
  CERT_PREF    VARCHAR(50) NOT NULL COMMENT '자격증 소유 여부',
  CERT_PREF_ID VARCHAR(50) NOT NULL COMMENT '자격증 소유 여부 ID',
  PRIMARY KEY (CERT_PREF_ID)
) COMMENT '자격증 소유 선호';

CREATE TABLE GENDER
(
  GENDER    VARCHAR(50) NOT NULL COMMENT '성별',
  GENDER_ID VARCHAR(50) NOT NULL COMMENT '성별ID',
  PRIMARY KEY (GENDER_ID)
) COMMENT '성별';

CREATE TABLE GENDER_PREFER
(
  GENDER_PREF    VARCHAR(50) NOT NULL COMMENT '파트너성별',
  GENDER_PREF_ID VARCHAR(50) NOT NULL COMMENT '파트너성별ID',
  PRIMARY KEY (GENDER_PREF_ID)
) COMMENT '파트너 성별 선호';

CREATE TABLE JOBTYPE_PREFER
(
  JOBTYPE_PREF    VARCHAR(50) NOT NULL COMMENT '고용형태',
  JOBTYPE_PREF_ID VARCHAR(50) NOT NULL COMMENT '고용형태_ID',
  PRIMARY KEY (JOBTYPE_PREF_ID)
) COMMENT '고용형태 선호';

CREATE TABLE LEVEL
(
  LEVEL    VARCHAR(50) NULL     COMMENT '치매진행단계',
  LEVEL_ID VARCHAR(50) NOT NULL COMMENT '치매진행단계ID',
  PRIMARY KEY (LEVEL_ID)
);

CREATE TABLE MATCHING_A
(
  GENDER_PREF_ID   VARCHAR(50) NOT NULL COMMENT '파트너성별ID',
  AGE_PREF_ID      VARCHAR(50) NOT NULL COMMENT '파트너 연령ID',
  WORKTYPE_PREF_ID VARCHAR(50) NOT NULL COMMENT '근무형태ID',
  JOBTYPE_PREF_ID  VARCHAR(50) NOT NULL COMMENT '고용형태_ID',
  PAT_AREA_ID      VARCHAR(50) NOT NULL COMMENT '환자지역ID',
  CAR_LIC_PREF_ID  VARCHAR(50) NOT NULL COMMENT '차량/면허 여부 ID',
  CERT_PREF_ID     VARCHAR(50) NOT NULL COMMENT '자격증 소유 여부 ID',
  MEMBERID         VARCHAR(50) NOT NULL COMMENT '회원아이디',
  GENDER_ID        VARCHAR(50) NULL     COMMENT '성별ID',
  PATIENTGENDER_ID VARCHAR(50) NULL     COMMENT '환자성별ID',
  LEVEL_ID         VARCHAR(50) NOT NULL COMMENT '치매진행단계ID'
) COMMENT '설문A 결과';

CREATE TABLE MEMBER_F
(
  MEMBERID         VARCHAR(50) NOT NULL COMMENT '회원아이디',
  PATIENTGENDER_ID VARCHAR(50) NOT NULL COMMENT '환자성별ID',
  LEVEL_ID         VARCHAR(50) NOT NULL COMMENT '치매진행단계ID'
) COMMENT '가족';

CREATE TABLE MEMBER_S
(
  LEVEL_ID VARCHAR(50) NOT NULL COMMENT '치매진행단계ID',
  MEMBERID VARCHAR(50) NOT NULL COMMENT '회원아이디'
) COMMENT '본인';

CREATE TABLE MEMBERS
(
  PHOTO        VARCHAR(500) NOT NULL COMMENT '회원 사진',
  TYPE_ID      VARCHAR(50)  NOT NULL COMMENT '회원유형ID',
  MEMBERID     VARCHAR(50)  NOT NULL COMMENT '회원아이디',
  PASSWORD     VARCHAR(50)  NOT NULL COMMENT '비밀번호',
  NAME         VARCHAR(50)  NOT NULL COMMENT '이름',
  GENDER_ID    VARCHAR(50)  NOT NULL COMMENT '성별ID',
  BIRTHDATE    INTEGER(50)  NOT NULL COMMENT '생년월일',
  PHONENUMBER  INTEGER(50)  NOT NULL COMMENT '전화번호',
  ADDRESS      VARCHAR(500) NOT NULL COMMENT '주소',
  EMAIL        VARCHAR(50)  NOT NULL COMMENT '이메일',
  INTRODUCTION VARCHAR(500) NOT NULL COMMENT '자기소개',
  PRIMARY KEY (MEMBERID)
) COMMENT '회원DB';

CREATE TABLE PAT_AREA
(
  PAT_AREA    VARCHAR(50) NOT NULL COMMENT '지역',
  PAT_AREA_ID VARCHAR(50) NOT NULL COMMENT '지역ID',
  PRIMARY KEY (PAT_AREA_ID)
) COMMENT '환자 지역';

CREATE TABLE PATIENTGENDER
(
  PATIENTGENDER    VARCHAR(50) NOT NULL COMMENT '환자성별',
  PATIENTGENDER_ID VARCHAR(50) NOT NULL COMMENT '환자성별ID',
  PRIMARY KEY (PATIENTGENDER_ID)
) COMMENT '환자성별';

CREATE TABLE WORKTYPE_PREFER
(
  WORKTYPE_PREF    VARCHAR(50) NOT NULL COMMENT '근무형태',
  WORKTYPE_PREF_ID VARCHAR(50) NOT NULL COMMENT '근무형태ID',
  PRIMARY KEY (WORKTYPE_PREF_ID)
) COMMENT '근무형태 선호';

ALTER TABLE MATCHING_A
  ADD CONSTRAINT FK_GENDER_PREFER_TO_MATCHING_A
    FOREIGN KEY (GENDER_PREF_ID)
    REFERENCES GENDER_PREFER (GENDER_PREF_ID);

ALTER TABLE MATCHING_A
  ADD CONSTRAINT FK_AGE_PREFER_TO_MATCHING_A
    FOREIGN KEY (AGE_PREF_ID)
    REFERENCES AGE_PREFER (AGE_PREF_ID);

ALTER TABLE MATCHING_A
  ADD CONSTRAINT FK_WORKTYPE_PREFER_TO_MATCHING_A
    FOREIGN KEY (WORKTYPE_PREF_ID)
    REFERENCES WORKTYPE_PREFER (WORKTYPE_PREF_ID);

ALTER TABLE MATCHING_A
  ADD CONSTRAINT FK_JOBTYPE_PREFER_TO_MATCHING_A
    FOREIGN KEY (JOBTYPE_PREF_ID)
    REFERENCES JOBTYPE_PREFER (JOBTYPE_PREF_ID);

ALTER TABLE MATCHING_A
  ADD CONSTRAINT FK_PAT_AREA_TO_MATCHING_A
    FOREIGN KEY (PAT_AREA_ID)
    REFERENCES PAT_AREA (PAT_AREA_ID);

ALTER TABLE MATCHING_A
  ADD CONSTRAINT FK_CAR_LICENCE_PREFER_TO_MATCHING_A
    FOREIGN KEY (CAR_LIC_PREF_ID)
    REFERENCES CAR_LICENCE_PREFER (CAR_LIC_PREF_ID);

ALTER TABLE MATCHING_A
  ADD CONSTRAINT FK_CERTIFICATION_PREFER_TO_MATCHING_A
    FOREIGN KEY (CERT_PREF_ID)
    REFERENCES CERTIFICATION_PREFER (CERT_PREF_ID);

ALTER TABLE MATCHING_A
  ADD CONSTRAINT FK_MEMBERS_TO_MATCHING_A
    FOREIGN KEY (MEMBERID)
    REFERENCES MEMBERS (MEMBERID);

ALTER TABLE MATCHING_A
  ADD CONSTRAINT FK_GENDER_TO_MATCHING_A
    FOREIGN KEY (GENDER_ID)
    REFERENCES GENDER (GENDER_ID);

ALTER TABLE MEMBER_S
  ADD CONSTRAINT FK_LEVEL_TO_MEMBER_S
    FOREIGN KEY (LEVEL_ID)
    REFERENCES LEVEL (LEVEL_ID);

ALTER TABLE MEMBER_S
  ADD CONSTRAINT FK_MEMBERS_TO_MEMBER_S
    FOREIGN KEY (MEMBERID)
    REFERENCES MEMBERS (MEMBERID);

ALTER TABLE MEMBER_F
  ADD CONSTRAINT FK_PATIENTGENDER_TO_MEMBER_F
    FOREIGN KEY (PATIENTGENDER_ID)
    REFERENCES PATIENTGENDER (PATIENTGENDER_ID);

ALTER TABLE MEMBER_F
  ADD CONSTRAINT FK_LEVEL_TO_MEMBER_F
    FOREIGN KEY (LEVEL_ID)
    REFERENCES LEVEL (LEVEL_ID);

ALTER TABLE MEMBER_F
  ADD CONSTRAINT FK_MEMBERS_TO_MEMBER_F
    FOREIGN KEY (MEMBERID)
    REFERENCES MEMBERS (MEMBERID);

ALTER TABLE MATCHING_A
  ADD CONSTRAINT FK_PATIENTGENDER_TO_MATCHING_A
    FOREIGN KEY (PATIENTGENDER_ID)
    REFERENCES PATIENTGENDER (PATIENTGENDER_ID);

ALTER TABLE MATCHING_A
  ADD CONSTRAINT FK_LEVEL_TO_MATCHING_A
    FOREIGN KEY (LEVEL_ID)
    REFERENCES LEVEL (LEVEL_ID);


CREATE TABLE CAR_LICENCE
(
  CAR_LICENCE    VARCHAR(50) NOT NULL COMMENT '차량/면허 여부',
  CAR_LICENCE_ID VARCHAR(50) NOT NULL COMMENT '차량/면허 여부 ID',
  PRIMARY KEY (CAR_LICENCE_ID)
) COMMENT '차량/면허 여부';

CREATE TABLE CARE_LEVEL
(
  CARE_LEVEL    VARCHAR(50) NOT NULL COMMENT '치매케어단계',
  CARE_LEVEL_ID VARCHAR(50) NOT NULL COMMENT '치매케어단계 ID',
  PRIMARY KEY (CARE_LEVEL_ID)
) COMMENT '치매 케어 가능 단계';

CREATE TABLE CERTIFICATION
(
  CERTIFICATION    VARCHAR(50) NOT NULL COMMENT '자격증 소유 여부',
  CERTIFICATION_ID VARCHAR(50) NOT NULL COMMENT '자격증 소유 여부 ID',
  PRIMARY KEY (CERTIFICATION_ID)
) COMMENT '자격증 소유 여부';

CREATE TABLE GENDER
(
  GENDER    VARCHAR(50) NOT NULL COMMENT '성별',
  GENDER_ID VARCHAR(50) NOT NULL COMMENT '성별ID',
  PRIMARY KEY (GENDER_ID)
) COMMENT '성별';

CREATE TABLE JOBTYPE
(
  JOBTYPE    VARCHAR(50) NOT NULL COMMENT '고용형태',
  JOBTYPE_ID VARCHAR(50) NOT NULL COMMENT '고용형태_ID',
  PRIMARY KEY (JOBTYPE_ID)
) COMMENT '고용형태';

CREATE TABLE MATCHING_B
(
  PAT_GENDER_PREF_ID VARCHAR(50) NOT NULL COMMENT '환자성별선호ID',
  WORKTYPE_ID        VARCHAR(50) NOT NULL COMMENT '근무형태ID',
  JOBTYPE_ID         VARCHAR(50) NOT NULL COMMENT '고용형태_ID',
  CARE_LEVEL_ID      VARCHAR(50) NOT NULL COMMENT '치매케어단계 ID',
  AREA_FIRST_ID      VARCHAR(50) NOT NULL COMMENT '서비스지역1ID',
  AREA_SECOND_ID     VARCHAR(50) NOT NULL COMMENT '서비스지역2ID',
  CAR_LICENCE_ID     VARCHAR(50) NOT NULL COMMENT '차량/면허 여부 ID',
  CERTIFICATION_ID   VARCHAR(50) NOT NULL COMMENT '자격증 소유 여부 ID',
  GENDER_ID          VARCHAR(50) NOT NULL COMMENT '성별ID',
  MEMBERID           VARCHAR(50) NOT NULL COMMENT '회원아이디',
  BIRTHDATE          INTEGER(50) NOT NULL COMMENT '생년월일'
) COMMENT '설문B 결과';

CREATE TABLE MEMBERS
(
  PHOTO        VARCHAR(500) NOT NULL COMMENT '회원 사진',
  TYPE_ID      VARCHAR(50)  NOT NULL COMMENT '회원유형ID',
  MEMBERID     VARCHAR(50)  NOT NULL COMMENT '회원아이디',
  PASSWORD     VARCHAR(50)  NOT NULL COMMENT '비밀번호',
  NAME         VARCHAR(50)  NOT NULL COMMENT '이름',
  BIRTHDATE    INTEGER(50)  NOT NULL COMMENT '생년월일',
  PHONENUMBER  INTEGER(50)  NOT NULL COMMENT '전화번호',
  ADDRESS      VARCHAR(500) NOT NULL COMMENT '주소',
  EMAIL        VARCHAR(50)  NOT NULL COMMENT '이메일',
  INTRODUCTION VARCHAR(500) NOT NULL COMMENT '자기소개',
  GENDER_ID    VARCHAR(50)  NOT NULL COMMENT '성별ID',
  PRIMARY KEY (MEMBERID, BIRTHDATE)
) COMMENT '회원DB';

CREATE TABLE PAT_GENDER_PREF
(
  PAT_GENDER_PREF    VARCHAR(50) NOT NULL COMMENT '환자성별선호',
  PAT_GENDER_PREF_ID VARCHAR(50) NOT NULL COMMENT '환자성별선호ID',
  PRIMARY KEY (PAT_GENDER_PREF_ID)
) COMMENT '선호 환자 성별';

CREATE TABLE SERVICEAREA_FIRST
(
  AREA_FIRST    VARCHAR(50) NOT NULL COMMENT '서비스지역1',
  AREA_FIRST_ID VARCHAR(50) NOT NULL COMMENT '서비스지역1ID',
  PRIMARY KEY (AREA_FIRST_ID)
) COMMENT '서비스 지역 1';

CREATE TABLE SERVICEAREA_SECOND
(
  AREA_SECOND    VARCHAR(50) NOT NULL COMMENT '서비스지역2',
  AREA_SECOND_ID VARCHAR(50) NOT NULL COMMENT '서비스지역2ID',
  PRIMARY KEY (AREA_SECOND_ID)
) COMMENT '서비스 지역 1';

CREATE TABLE WORKTYPE
(
  WORKTYPE    VARCHAR(50) NOT NULL COMMENT '근무형태',
  WORKTYPE_ID VARCHAR(50) NOT NULL COMMENT '근무형태ID',
  PRIMARY KEY (WORKTYPE_ID)
) COMMENT '근무형태';

ALTER TABLE MATCHING_B
  ADD CONSTRAINT FK_PAT_GENDER_PREF_TO_MATCHING_B
    FOREIGN KEY (PAT_GENDER_PREF_ID)
    REFERENCES PAT_GENDER_PREF (PAT_GENDER_PREF_ID);

ALTER TABLE MATCHING_B
  ADD CONSTRAINT FK_WORKTYPE_TO_MATCHING_B
    FOREIGN KEY (WORKTYPE_ID)
    REFERENCES WORKTYPE (WORKTYPE_ID);

ALTER TABLE MATCHING_B
  ADD CONSTRAINT FK_JOBTYPE_TO_MATCHING_B
    FOREIGN KEY (JOBTYPE_ID)
    REFERENCES JOBTYPE (JOBTYPE_ID);

ALTER TABLE MATCHING_B
  ADD CONSTRAINT FK_SERVICEAREA_FIRST_TO_MATCHING_B
    FOREIGN KEY (AREA_FIRST_ID)
    REFERENCES SERVICEAREA_FIRST (AREA_FIRST_ID);

ALTER TABLE MATCHING_B
  ADD CONSTRAINT FK_CARE_LEVEL_TO_MATCHING_B
    FOREIGN KEY (CARE_LEVEL_ID)
    REFERENCES CARE_LEVEL (CARE_LEVEL_ID);

ALTER TABLE MATCHING_B
  ADD CONSTRAINT FK_SERVICEAREA_SECOND_TO_MATCHING_B
    FOREIGN KEY (AREA_SECOND_ID)
    REFERENCES SERVICEAREA_SECOND (AREA_SECOND_ID);

ALTER TABLE MEMBERS
  ADD CONSTRAINT FK_GENDER_TO_MEMBERS
    FOREIGN KEY (GENDER_ID)
    REFERENCES GENDER (GENDER_ID);

ALTER TABLE MATCHING_B
  ADD CONSTRAINT FK_CAR_LICENCE_TO_MATCHING_B
    FOREIGN KEY (CAR_LICENCE_ID)
    REFERENCES CAR_LICENCE (CAR_LICENCE_ID);

ALTER TABLE MATCHING_B
  ADD CONSTRAINT FK_CERTIFICATION_TO_MATCHING_B
    FOREIGN KEY (CERTIFICATION_ID)
    REFERENCES CERTIFICATION (CERTIFICATION_ID);

ALTER TABLE MATCHING_B
  ADD CONSTRAINT FK_GENDER_TO_MATCHING_B
    FOREIGN KEY (GENDER_ID)
    REFERENCES GENDER (GENDER_ID);

ALTER TABLE MATCHING_B
  ADD CONSTRAINT FK_MEMBERS_TO_MATCHING_B
    FOREIGN KEY (MEMBERID, BIRTHDATE)
    REFERENCES MEMBERS (MEMBERID, BIRTHDATE);


CREATE TABLE COMMONS_CODE
(
  COMMON_CODE_ID        varchar(40)   NOT NULL COMMENT '공통 코드_ID',
  NAME                  varchar(1000) NOT NULL COMMENT '명칭',
  ORDER_NUMBER          decimal       NULL     COMMENT '정렬순서',
  ATTRIBUTION_1         varchar(60)   NULL     COMMENT '속성_1',
  ATTRIBUTION_2         varchar(60)   NULL     COMMENT '속성_2',
  DESCRIPTION           varchar(1000) NULL     COMMENT '코드설명',
  SYSTEM_CODE_YN        varchar(40)   NOT NULL DEFAULT N COMMENT '초기 시스템 코드 여부',
  USE_YN                varchar(40)   NOT NULL COMMENT '사용 여부',
  REGISTER_SEQ          varchar(50)   NOT NULL COMMENT '등록자SEQ',
  REGISTRY_DATE         varchar(20)   NOT NULL COMMENT '등록일자',
  MODIFIER_SEQ          varchar(40)   NOT NULL COMMENT '수정자_SEQ',
  MODIFY_DATE           varchar(20)   NOT NULL COMMENT '수정일자',
  PARENT_COMMON_CODE_ID varchar(40)   NULL     COMMENT '상위_공통 코드_ID',
  PRIMARY KEY (COMMON_CODE_ID)
);

CREATE TABLE GENDER
(
  GENDER    VARCHAR(50) NOT NULL COMMENT '성별',
  GENDER_ID VARCHAR(50) NOT NULL COMMENT '성별ID',
  PRIMARY KEY (GENDER_ID)
) COMMENT '성별';

CREATE TABLE LEVEL
(
  LEVEL    VARCHAR(50) NOT NULL COMMENT '치매진행단계',
  LEVEL_ID VARCHAR(50) NOT NULL COMMENT '치매진행단계ID',
  PRIMARY KEY (LEVEL_ID)
) COMMENT '치매진행단계';

CREATE TABLE MEDICALDEPARTMENT
(
  MEDICALDEPARTMENT    VARCHAR(50) NOT NULL COMMENT '진료과',
  MEDICALDEPARTMENT_ID VARCHAR(50) NOT NULL COMMENT '진료과ID',
  PRIMARY KEY (MEDICALDEPARTMENT_ID)
) COMMENT '진료과';

CREATE TABLE MEMBER_D
(
  CLINICNAME           VARCHAR(50) NOT NULL COMMENT '병원이름',
  MEMBERID             VARCHAR(50) NOT NULL COMMENT '회원아이디',
  MEDICALDEPARTMENT_ID VARCHAR(50) NOT NULL COMMENT '진료과ID'
) COMMENT '전문의';

CREATE TABLE MEMBER_F
(
  MEMBERID         VARCHAR(50) NOT NULL COMMENT '회원아이디',
  LEVEL_ID         VARCHAR(50) NOT NULL COMMENT '치매진행단계ID',
  PATIENTGENDER_ID VARCHAR(50) NOT NULL COMMENT '환자성별ID'
) COMMENT '가족';

CREATE TABLE MEMBER_S
(
  LEVEL_ID VARCHAR(50) NOT NULL COMMENT '치매진행단계ID',
  MEMBERID VARCHAR(50) NOT NULL COMMENT '회원아이디'
) COMMENT '본인';

CREATE TABLE MEMBERS
(
  PHOTO        VARCHAR(500) NOT NULL COMMENT '회원 사진',
  TYPE_ID      VARCHAR(50)  NOT NULL COMMENT '회원유형ID',
  MEMBERID     VARCHAR(50)  NOT NULL COMMENT '회원아이디',
  PASSWORD     VARCHAR(50)  NOT NULL COMMENT '비밀번호',
  NAME         VARCHAR(50)  NOT NULL COMMENT '이름',
  GENDER_ID    VARCHAR(50)  NOT NULL COMMENT '성별ID',
  BIRTHDATE    INTEGER(50)  NOT NULL COMMENT '생년월일',
  PHONENUMBER  INTEGER(50)  NOT NULL COMMENT '전화번호',
  ADDRESS      VARCHAR(500) NOT NULL COMMENT '주소',
  EMAIL        VARCHAR(50)  NOT NULL COMMENT '이메일',
  INTRODUCTION VARCHAR(500) NOT NULL COMMENT '자기소개',
  PRIMARY KEY (MEMBERID)
) COMMENT '회원DB';

CREATE TABLE PATIENTGENDER
(
  PATIENTGENDER    VARCHAR(50) NOT NULL COMMENT '환자성별',
  PATIENTGENDER_ID VARCHAR(50) NOT NULL COMMENT '환자성별ID',
  PRIMARY KEY (PATIENTGENDER_ID)
) COMMENT '환자성별';

CREATE TABLE TYPE
(
  TYPE    VARCHAR(50) NOT NULL COMMENT '회원유형',
  TYPE_ID VARCHAR(50) NOT NULL COMMENT '회원유형ID',
  PRIMARY KEY (TYPE_ID)
) COMMENT '회원유형';

ALTER TABLE COMMONS_CODE
  ADD CONSTRAINT FK_COMMONS_CODE_TO_COMMONS_CODE
    FOREIGN KEY (PARENT_COMMON_CODE_ID)
    REFERENCES COMMONS_CODE (COMMON_CODE_ID);

ALTER TABLE MEMBER_D
  ADD CONSTRAINT FK_MEMBERS_TO_MEMBER_D
    FOREIGN KEY (MEMBERID)
    REFERENCES MEMBERS (MEMBERID);

ALTER TABLE MEMBER_D
  ADD CONSTRAINT FK_MEDICALDEPARTMENT_TO_MEMBER_D
    FOREIGN KEY (MEDICALDEPARTMENT_ID)
    REFERENCES MEDICALDEPARTMENT (MEDICALDEPARTMENT_ID);

ALTER TABLE MEMBER_F
  ADD CONSTRAINT FK_MEMBERS_TO_MEMBER_F
    FOREIGN KEY (MEMBERID)
    REFERENCES MEMBERS (MEMBERID);

ALTER TABLE MEMBER_F
  ADD CONSTRAINT FK_LEVEL_TO_MEMBER_F
    FOREIGN KEY (LEVEL_ID)
    REFERENCES LEVEL (LEVEL_ID);

ALTER TABLE MEMBER_F
  ADD CONSTRAINT FK_PATIENTGENDER_TO_MEMBER_F
    FOREIGN KEY (PATIENTGENDER_ID)
    REFERENCES PATIENTGENDER (PATIENTGENDER_ID);

ALTER TABLE MEMBER_S
  ADD CONSTRAINT FK_LEVEL_TO_MEMBER_S
    FOREIGN KEY (LEVEL_ID)
    REFERENCES LEVEL (LEVEL_ID);

ALTER TABLE MEMBER_S
  ADD CONSTRAINT FK_MEMBERS_TO_MEMBER_S
    FOREIGN KEY (MEMBERID)
    REFERENCES MEMBERS (MEMBERID);

ALTER TABLE MEMBERS
  ADD CONSTRAINT FK_TYPE_TO_MEMBERS
    FOREIGN KEY (TYPE_ID)
    REFERENCES TYPE (TYPE_ID);

ALTER TABLE MEMBERS
  ADD CONSTRAINT FK_GENDER_TO_MEMBERS
    FOREIGN KEY (GENDER_ID)
    REFERENCES GENDER (GENDER_ID);


CREATE TABLE ANS_CODE
(
  ANSWERS   VARCHAR(50) NOT NULL COMMENT '답변 종류',
  ANS_SCORE INTEGER     NOT NULL COMMENT '답변 점수',
  PRIMARY KEY (ANS_SCORE)
) COMMENT '답변 코드';

CREATE TABLE MEMBERS
(
  PHOTO        VARCHAR(500) NOT NULL COMMENT '회원 사진',
  TYPE_ID      VARCHAR(50)  NOT NULL COMMENT '회원유형ID',
  MEMBERID     VARCHAR(50)  NOT NULL COMMENT '회원아이디',
  PASSWORD     VARCHAR(50)  NOT NULL COMMENT '비밀번호',
  NAME         VARCHAR(50)  NOT NULL COMMENT '이름',
  GENDER_ID    VARCHAR(50)  NOT NULL COMMENT '성별ID',
  BIRTHDATE    INTEGER(50)  NOT NULL COMMENT '생년월일',
  PHONENUMBER  INTEGER(50)  NOT NULL COMMENT '전화번호',
  ADDRESS      VARCHAR(500) NOT NULL COMMENT '주소',
  EMAIL        VARCHAR(50)  NOT NULL COMMENT '이메일',
  INTRODUCTION VARCHAR(500) NOT NULL COMMENT '자기소개',
  PRIMARY KEY (MEMBERID)
) COMMENT '회원DB';

CREATE TABLE Q_CODE
(
  QUESTIONS VARCHAR(500) NOT NULL COMMENT '자가진단 질문',
  Q_CODE    VARCHAR(50)  NOT NULL COMMENT '질문 코드',
  PRIMARY KEY (Q_CODE)
) COMMENT '질문 코드';

CREATE TABLE QNA
(
  Q_CODE    VARCHAR(50) NOT NULL COMMENT '질문 코드',
  ANS_SCORE INTEGER     NOT NULL COMMENT '답변 점수',
  QNA_CODE  VARCHAR(50) NOT NULL COMMENT '질답 코드',
  PRIMARY KEY (QNA_CODE)
) COMMENT '자가진단 메인 화면';

CREATE TABLE 답변한내역
(
  QNA_CODE VARCHAR(50) NOT NULL,
  MEMBERID VARCHAR(50) NOT NULL COMMENT '회원아이디'
);

ALTER TABLE QNA
  ADD CONSTRAINT FK_Q_CODE_TO_QNA
    FOREIGN KEY (Q_CODE)
    REFERENCES Q_CODE (Q_CODE);

ALTER TABLE QNA
  ADD CONSTRAINT FK_ANS_CODE_TO_QNA
    FOREIGN KEY (ANS_SCORE)
    REFERENCES ANS_CODE (ANS_SCORE);

ALTER TABLE 답변한내역
  ADD CONSTRAINT FK_QNA_TO_답변한내역
    FOREIGN KEY (QNA_CODE)
    REFERENCES QNA (QNA_CODE);

ALTER TABLE 답변한내역
  ADD CONSTRAINT FK_MEMBERS_TO_답변한내역
    FOREIGN KEY (MEMBERID)
    REFERENCES MEMBERS (MEMBERID);


CREATE TABLE A_Questions_Code
(
  A_QUESTIONS    VARCHAR(500) NOT NULL COMMENT '질문내용',
  A_QUESTIONS_ID VARCHAR(50)  NOT NULL COMMENT '질문아이디',
  PRIMARY KEY (A_QUESTIONS_ID)
) COMMENT '환자/가족 질문 코드';

CREATE TABLE AQ_01_ANSWER_CODE
(
  AQ_01_ANSWERS    VARCHAR(50) NOT NULL COMMENT '질문 1 답 종류',
  AQ_01_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 1 답 코드',
  PRIMARY KEY (AQ_01_ANSWERS_ID)
) COMMENT '1. 파트너 성별에 대한 답';

CREATE TABLE AQ_01_QNA
(
  A_QUESTIONS_ID   VARCHAR(50) NOT NULL COMMENT '질문아이디',
  AQ_01_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 1 답 코드'
) COMMENT '질문과 답 AQ01';

CREATE TABLE AQ_02_ANSWER_CODE
(
  AQ_02_ANSWERS    VARCHAR(50) NOT NULL COMMENT '질문 2 답 종류',
  AQ_02_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 2 답 코드',
  PRIMARY KEY (AQ_02_ANSWERS_ID)
) COMMENT '2. 파트너 연령에 대한 답';

CREATE TABLE AQ_02_QNA
(
  A_QUESTIONS_ID   VARCHAR(50) NOT NULL COMMENT '질문아이디',
  AQ_02_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 2 답 코드'
);

CREATE TABLE AQ_03_ANSWER_CODE
(
  AQ_03_ANSWERS    VARCHAR(50) NOT NULL COMMENT '질문 3 답 종류',
  AQ_03_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 3 답 코드',
  PRIMARY KEY (AQ_03_ANSWERS_ID)
) COMMENT '3. 근무형태에 대한 답';

CREATE TABLE AQ_03_QNA
(
  A_QUESTIONS_ID   VARCHAR(50) NOT NULL COMMENT '질문아이디',
  AQ_03_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 3 답 코드'
);

CREATE TABLE AQ_04_ANSWER_CODE
(
  AQ_04_ANSWERS    VARCHAR(50) NOT NULL,
  AQ_04_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 4 답 코드',
  PRIMARY KEY (AQ_04_ANSWERS_ID)
) COMMENT '4. 고용형태에 대한 답';

CREATE TABLE AQ_04_QNA
(
  A_QUESTIONS_ID   VARCHAR(50) NOT NULL COMMENT '질문아이디',
  AQ_04_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 4 답 코드'
);

CREATE TABLE AQ_05_ANSWER_CODE
(
  AQ_05_ANSWERS    VARCHAR(50) NOT NULL,
  AQ_05_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 5 답 코드',
  PRIMARY KEY (AQ_05_ANSWERS_ID)
) COMMENT '5. 서비스지역에 대한 답';

CREATE TABLE AQ_05_QNA
(
  A_QUESTIONS_ID   VARCHAR(50) NOT NULL COMMENT '질문아이디',
  AQ_05_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 5 답 코드'
);

CREATE TABLE AQ_06_ANSWER_CODE
(
  AQ_06_ANSWERS    VARCHAR(50) NOT NULL,
  AQ_06_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 6 답 코드',
  PRIMARY KEY (AQ_06_ANSWERS_ID)
) COMMENT '6. 차량/면허에 대한 답';

CREATE TABLE AQ_06_QNA
(
  A_QUESTIONS_ID   VARCHAR(50) NOT NULL COMMENT '질문아이디',
  AQ_06_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 6 답 코드'
);

CREATE TABLE AQ_07_ANSWER_CODE
(
  AQ_07_ANSWERS    VARCHAR(50) NOT NULL,
  AQ_07_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 7 답 코드',
  PRIMARY KEY (AQ_07_ANSWERS_ID)
) COMMENT '7. 자격증에 대한 답';

CREATE TABLE AQ_07_QNA
(
  A_QUESTIONS_ID   VARCHAR(50) NOT NULL COMMENT '질문아이디',
  AQ_07_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 7 답 코드'
);

ALTER TABLE AQ_01_QNA
  ADD CONSTRAINT FK_A_Questions_Code_TO_AQ_01_QNA
    FOREIGN KEY (A_QUESTIONS_ID)
    REFERENCES A_Questions_Code (A_QUESTIONS_ID);

ALTER TABLE AQ_01_QNA
  ADD CONSTRAINT FK_AQ_01_ANSWER_CODE_TO_AQ_01_QNA
    FOREIGN KEY (AQ_01_ANSWERS_ID)
    REFERENCES AQ_01_ANSWER_CODE (AQ_01_ANSWERS_ID);

ALTER TABLE AQ_02_QNA
  ADD CONSTRAINT FK_A_Questions_Code_TO_AQ_02_QNA
    FOREIGN KEY (A_QUESTIONS_ID)
    REFERENCES A_Questions_Code (A_QUESTIONS_ID);

ALTER TABLE AQ_02_QNA
  ADD CONSTRAINT FK_AQ_02_ANSWER_CODE_TO_AQ_02_QNA
    FOREIGN KEY (AQ_02_ANSWERS_ID)
    REFERENCES AQ_02_ANSWER_CODE (AQ_02_ANSWERS_ID);

ALTER TABLE AQ_03_QNA
  ADD CONSTRAINT FK_A_Questions_Code_TO_AQ_03_QNA
    FOREIGN KEY (A_QUESTIONS_ID)
    REFERENCES A_Questions_Code (A_QUESTIONS_ID);

ALTER TABLE AQ_03_QNA
  ADD CONSTRAINT FK_AQ_03_ANSWER_CODE_TO_AQ_03_QNA
    FOREIGN KEY (AQ_03_ANSWERS_ID)
    REFERENCES AQ_03_ANSWER_CODE (AQ_03_ANSWERS_ID);

ALTER TABLE AQ_04_QNA
  ADD CONSTRAINT FK_A_Questions_Code_TO_AQ_04_QNA
    FOREIGN KEY (A_QUESTIONS_ID)
    REFERENCES A_Questions_Code (A_QUESTIONS_ID);

ALTER TABLE AQ_04_QNA
  ADD CONSTRAINT FK_AQ_04_ANSWER_CODE_TO_AQ_04_QNA
    FOREIGN KEY (AQ_04_ANSWERS_ID)
    REFERENCES AQ_04_ANSWER_CODE (AQ_04_ANSWERS_ID);

ALTER TABLE AQ_05_QNA
  ADD CONSTRAINT FK_A_Questions_Code_TO_AQ_05_QNA
    FOREIGN KEY (A_QUESTIONS_ID)
    REFERENCES A_Questions_Code (A_QUESTIONS_ID);

ALTER TABLE AQ_05_QNA
  ADD CONSTRAINT FK_AQ_05_ANSWER_CODE_TO_AQ_05_QNA
    FOREIGN KEY (AQ_05_ANSWERS_ID)
    REFERENCES AQ_05_ANSWER_CODE (AQ_05_ANSWERS_ID);

ALTER TABLE AQ_06_QNA
  ADD CONSTRAINT FK_A_Questions_Code_TO_AQ_06_QNA
    FOREIGN KEY (A_QUESTIONS_ID)
    REFERENCES A_Questions_Code (A_QUESTIONS_ID);

ALTER TABLE AQ_06_QNA
  ADD CONSTRAINT FK_AQ_06_ANSWER_CODE_TO_AQ_06_QNA
    FOREIGN KEY (AQ_06_ANSWERS_ID)
    REFERENCES AQ_06_ANSWER_CODE (AQ_06_ANSWERS_ID);

ALTER TABLE AQ_07_QNA
  ADD CONSTRAINT FK_A_Questions_Code_TO_AQ_07_QNA
    FOREIGN KEY (A_QUESTIONS_ID)
    REFERENCES A_Questions_Code (A_QUESTIONS_ID);

ALTER TABLE AQ_07_QNA
  ADD CONSTRAINT FK_AQ_07_ANSWER_CODE_TO_AQ_07_QNA
    FOREIGN KEY (AQ_07_ANSWERS_ID)
    REFERENCES AQ_07_ANSWER_CODE (AQ_07_ANSWERS_ID);


CREATE TABLE B_Questions_Code
(
  B_QUESTIONS    VARCHAR(500) NOT NULL COMMENT '질문내용',
  B_QUESTIONS_ID VARCHAR(50)  NOT NULL COMMENT '질문아이디',
  PRIMARY KEY (B_QUESTIONS_ID)
) COMMENT '파트너 질문 코드';

CREATE TABLE BQ_01_ANSWER_CODE
(
  BQ_01_ANSWERS    VARCHAR(50) NOT NULL COMMENT '질문 1 답 종류',
  BQ_01_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 1 답 코드',
  PRIMARY KEY (BQ_01_ANSWERS_ID)
) COMMENT '1. 환자 성별에 대한 답';

CREATE TABLE BQ_01_QNA
(
  B_QUESTIONS_ID   VARCHAR(50) NOT NULL COMMENT '질문아이디',
  BQ_01_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 1 답 코드'
) COMMENT '질문과 답 BQ01';

CREATE TABLE BQ_02_ANSWER_CODE
(
  BQ_02_ANSWERS    VARCHAR(50) NOT NULL COMMENT '질문 2 답 종류',
  BQ_02_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 2 답 코드',
  PRIMARY KEY (BQ_02_ANSWERS_ID)
) COMMENT '2. 근무형태에 대한 답';

CREATE TABLE BQ_02_QNA
(
  B_QUESTIONS_ID   VARCHAR(50) NOT NULL COMMENT '질문아이디',
  BQ_02_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 2 답 코드'
) COMMENT '질문과 답 BQ02';

CREATE TABLE BQ_03_ANSWER_CODE
(
  BQ_03_ANSWERS    VARCHAR(50) NOT NULL COMMENT '질문 3 답 종류',
  BQ_03_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 3 답 코드',
  PRIMARY KEY (BQ_03_ANSWERS_ID)
) COMMENT '3. 고용형태에 대한 답';

CREATE TABLE BQ_03_QNA
(
  B_QUESTIONS_ID   VARCHAR(50) NOT NULL COMMENT '질문아이디',
  BQ_03_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 3 답 코드'
) COMMENT '질문과 답 BQ03';

CREATE TABLE BQ_04_ANSWER_CODE
(
  BQ_04_ANSWERS    VARCHAR(50) NOT NULL,
  BQ_04_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 4 답 코드',
  PRIMARY KEY (BQ_04_ANSWERS_ID)
) COMMENT '4. 치매단계에 대한 답';

CREATE TABLE BQ_04_QNA
(
  B_QUESTIONS_ID   VARCHAR(50) NOT NULL COMMENT '질문아이디',
  BQ_04_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 4 답 코드'
) COMMENT '질문과 답 BQ04';

CREATE TABLE BQ_05_ANSWER_CODE
(
  BQ_05_ANSWERS    VARCHAR(50) NOT NULL,
  BQ_05_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 5 답 코드',
  PRIMARY KEY (BQ_05_ANSWERS_ID)
) COMMENT '5. 서비스지역1 에 대한 답';

CREATE TABLE BQ_05_QNA
(
  B_QUESTIONS_ID   VARCHAR(50) NOT NULL COMMENT '질문아이디',
  BQ_05_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 5 답 코드'
) COMMENT '질문과 답 BQ05';

CREATE TABLE BQ_06_ANSWER_CODE
(
  BQ_06_ANSWERS    VARCHAR(50) NOT NULL,
  BQ_06_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 6 답 코드',
  PRIMARY KEY (BQ_06_ANSWERS_ID)
) COMMENT '6. 서비스지역2에 대한 답';

CREATE TABLE BQ_06_QNA
(
  B_QUESTIONS_ID   VARCHAR(50) NOT NULL COMMENT '질문아이디',
  BQ_06_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 6 답 코드'
) COMMENT '질문과 답 BQ06';

CREATE TABLE BQ_07_ANSWER_CODE
(
  BQ_07_ANSWERS    VARCHAR(50) NOT NULL,
  BQ_07_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 7 답 코드',
  PRIMARY KEY (BQ_07_ANSWERS_ID)
) COMMENT '7. 차량/면허에 대한 답';

CREATE TABLE BQ_07_QNA
(
  B_QUESTIONS_ID   VARCHAR(50) NOT NULL COMMENT '질문아이디',
  BQ_07_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 7 답 코드'
) COMMENT '질문과 답 BQ07';

CREATE TABLE BQ_08_ANSWER_CODE
(
  BQ_08_ANSWERS    VARCHAR(50) NOT NULL,
  BQ_08_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 8 답 코드',
  PRIMARY KEY (BQ_08_ANSWERS_ID)
) COMMENT '8. 자격증에 대한 답';

CREATE TABLE BQ_08_QNA
(
  B_QUESTIONS_ID   VARCHAR(50) NOT NULL COMMENT '질문아이디',
  BQ_08_ANSWERS_ID VARCHAR(50) NOT NULL COMMENT '질문 8 답 코드'
) COMMENT '질문과 답 BQ08';

ALTER TABLE BQ_01_QNA
  ADD CONSTRAINT FK_B_Questions_Code_TO_BQ_01_QNA
    FOREIGN KEY (B_QUESTIONS_ID)
    REFERENCES B_Questions_Code (B_QUESTIONS_ID);

ALTER TABLE BQ_01_QNA
  ADD CONSTRAINT FK_BQ_01_ANSWER_CODE_TO_BQ_01_QNA
    FOREIGN KEY (BQ_01_ANSWERS_ID)
    REFERENCES BQ_01_ANSWER_CODE (BQ_01_ANSWERS_ID);

ALTER TABLE BQ_02_QNA
  ADD CONSTRAINT FK_B_Questions_Code_TO_BQ_02_QNA
    FOREIGN KEY (B_QUESTIONS_ID)
    REFERENCES B_Questions_Code (B_QUESTIONS_ID);

ALTER TABLE BQ_02_QNA
  ADD CONSTRAINT FK_BQ_02_ANSWER_CODE_TO_BQ_02_QNA
    FOREIGN KEY (BQ_02_ANSWERS_ID)
    REFERENCES BQ_02_ANSWER_CODE (BQ_02_ANSWERS_ID);

ALTER TABLE BQ_03_QNA
  ADD CONSTRAINT FK_B_Questions_Code_TO_BQ_03_QNA
    FOREIGN KEY (B_QUESTIONS_ID)
    REFERENCES B_Questions_Code (B_QUESTIONS_ID);

ALTER TABLE BQ_03_QNA
  ADD CONSTRAINT FK_BQ_03_ANSWER_CODE_TO_BQ_03_QNA
    FOREIGN KEY (BQ_03_ANSWERS_ID)
    REFERENCES BQ_03_ANSWER_CODE (BQ_03_ANSWERS_ID);

ALTER TABLE BQ_04_QNA
  ADD CONSTRAINT FK_B_Questions_Code_TO_BQ_04_QNA
    FOREIGN KEY (B_QUESTIONS_ID)
    REFERENCES B_Questions_Code (B_QUESTIONS_ID);

ALTER TABLE BQ_04_QNA
  ADD CONSTRAINT FK_BQ_04_ANSWER_CODE_TO_BQ_04_QNA
    FOREIGN KEY (BQ_04_ANSWERS_ID)
    REFERENCES BQ_04_ANSWER_CODE (BQ_04_ANSWERS_ID);

ALTER TABLE BQ_05_QNA
  ADD CONSTRAINT FK_B_Questions_Code_TO_BQ_05_QNA
    FOREIGN KEY (B_QUESTIONS_ID)
    REFERENCES B_Questions_Code (B_QUESTIONS_ID);

ALTER TABLE BQ_05_QNA
  ADD CONSTRAINT FK_BQ_05_ANSWER_CODE_TO_BQ_05_QNA
    FOREIGN KEY (BQ_05_ANSWERS_ID)
    REFERENCES BQ_05_ANSWER_CODE (BQ_05_ANSWERS_ID);

ALTER TABLE BQ_06_QNA
  ADD CONSTRAINT FK_B_Questions_Code_TO_BQ_06_QNA
    FOREIGN KEY (B_QUESTIONS_ID)
    REFERENCES B_Questions_Code (B_QUESTIONS_ID);

ALTER TABLE BQ_06_QNA
  ADD CONSTRAINT FK_BQ_06_ANSWER_CODE_TO_BQ_06_QNA
    FOREIGN KEY (BQ_06_ANSWERS_ID)
    REFERENCES BQ_06_ANSWER_CODE (BQ_06_ANSWERS_ID);

ALTER TABLE BQ_07_QNA
  ADD CONSTRAINT FK_B_Questions_Code_TO_BQ_07_QNA
    FOREIGN KEY (B_QUESTIONS_ID)
    REFERENCES B_Questions_Code (B_QUESTIONS_ID);

ALTER TABLE BQ_07_QNA
  ADD CONSTRAINT FK_BQ_07_ANSWER_CODE_TO_BQ_07_QNA
    FOREIGN KEY (BQ_07_ANSWERS_ID)
    REFERENCES BQ_07_ANSWER_CODE (BQ_07_ANSWERS_ID);

ALTER TABLE BQ_08_QNA
  ADD CONSTRAINT FK_B_Questions_Code_TO_BQ_08_QNA
    FOREIGN KEY (B_QUESTIONS_ID)
    REFERENCES B_Questions_Code (B_QUESTIONS_ID);

ALTER TABLE BQ_08_QNA
  ADD CONSTRAINT FK_BQ_08_ANSWER_CODE_TO_BQ_08_QNA
    FOREIGN KEY (BQ_08_ANSWERS_ID)
    REFERENCES BQ_08_ANSWER_CODE (BQ_08_ANSWERS_ID);
